import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Scanner;

public class CalendarList {

	// This simply returns each day from entered date till today excluding
	// saturdays and sundays

	public static void main(String[] args) {
		String y = "";
		String m = "";
		String d = "";

		Calendar calendar = Calendar.getInstance();

		calendar.set(Calendar.HOUR_OF_DAY, 00);
		calendar.set(Calendar.MINUTE, 00);
		calendar.set(Calendar.SECOND, 0);
		calendar.set(Calendar.MILLISECOND, 0);

		Scanner input = new Scanner(System.in);

		boolean ifValid = false;
		int index = 0;

		while (!ifValid) {

			System.out.println("set year:\n");

			y = input.nextLine();

			try {

				index = Integer.parseInt(y);
				;
			} catch (NumberFormatException e) {
				System.out.println("it is not a number.\n");

			}
			ifValid = index == 0 ? false : true;
		}
		while (Integer.parseInt(y) < 1970) {

			System.out.println("year must be after 1970!\n");
			System.out.println("set year:\n");
			y = input.nextLine();
		}

		boolean ifValid1 = false;
		int index1 = 0;
		System.out.println("set month:\n");
		while (!ifValid1) {

			m = input.nextLine();

			try {

				index1 = Integer.parseInt(m);
				;
			} catch (NumberFormatException e) {
				System.out.println("it is not a number.\n");

				ifValid1 = index1 == 0 ? false : true;
			}
			while (Integer.parseInt(m) < -1 || Integer.parseInt(m) > 12) {

				System.out.println("month must be beetwen 1 - 12!\n");
				System.out.println("set month:\n");
				m = input.nextLine();

			}

			boolean ifValid2 = false;
			int index2 = 0;

			while (!ifValid2) {

				System.out.println("set day:\n");

				d = input.nextLine();

				try {

					index2 = Integer.parseInt(d);
					;
				} catch (NumberFormatException e) {
					System.out.println("it is not a number.\n");

				}
				ifValid2 = index2 == 0 ? false : true;
			}
			while (Integer.parseInt(d) < -1 || Integer.parseInt(d) > 30) {

				System.out.println("day must be beetwen 1 - 31!\n");
				System.out.println("set day:\n");
				d = input.nextLine();
			}

			Calendar calendar1 = new GregorianCalendar(Integer.parseInt(y), Integer.parseInt(m) - 1,
					Integer.parseInt(d));

			while (calendar.get(Calendar.DAY_OF_MONTH) != calendar1.get(Calendar.DAY_OF_MONTH)
					|| calendar.get(Calendar.MONTH) != calendar1.get(Calendar.MONTH)
					|| calendar.get(Calendar.YEAR) != calendar1.get(Calendar.YEAR))

			{

				calendar1.add(Calendar.DAY_OF_MONTH, 1);
				if (calendar1.get(Calendar.DAY_OF_WEEK) != 1 && calendar1.get(Calendar.DAY_OF_WEEK) != 7)

					System.out.println(
							(calendar1.getTime().toString()).substring(0, 10) + " " + calendar1.get(Calendar.YEAR));

			}

		}
		input.close();
	}
}
